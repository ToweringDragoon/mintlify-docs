{
    "openapi": "3.1.0",
    "info": {
        "title": "Enrichment API",
        "description": "API for file enrichment services",
        "version": "0.1.0"
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/files": {
            "post": {
                "tags": [
                    "files"
                ],
                "summary": "Upload file with metadata",
                "description": "Upload a file using multipart/form-data with metadata.\n    Returns an object_id for the uploaded file and submission_id for the metadata submission.\n\n    Example:\n    ```\n    curl -k -u n:n -F \"file=@example.txt\"          -F 'metadata={\"agent_id\":\"agent123\",\"project\":\"proj1\",\"timestamp\":\"2024-01-29T12:00:00Z\",\"expiration\":\"2024-02-29T12:00:00Z\",\"path\":\"/tmp/example.txt\"}'          https://nemesis:7443/api/files\n    ```",
                "operationId": "upload_file_files_post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_file_files_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileWithMetadataResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/{object_id}": {
            "get": {
                "tags": [
                    "files"
                ],
                "summary": "Download a file",
                "description": "Download a file by its object ID with optional raw format and custom filename",
                "operationId": "download_file_files__object_id__get",
                "parameters": [
                    {
                        "name": "object_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Unique identifier of the file to download",
                            "title": "Object Id"
                        },
                        "description": "Unique identifier of the file to download"
                    },
                    {
                        "name": "raw",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Whether to return the file in raw format",
                            "default": false,
                            "title": "Raw"
                        },
                        "description": "Whether to return the file in raw format"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Custom filename for the downloaded file",
                            "default": "",
                            "title": "Name"
                        },
                        "description": "Custom filename for the downloaded file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflows/status": {
            "get": {
                "tags": [
                    "workflows"
                ],
                "summary": "Get workflow enrichment workflow status",
                "description": "Get the current status of the enrichment workflow system",
                "operationId": "get_status_workflows_status_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowStatusResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflows/failed": {
            "get": {
                "tags": [
                    "workflows"
                ],
                "summary": "Get failed workflows",
                "description": "Get the set of failed enrichment workflows",
                "operationId": "get_failed_workflows_failed_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedWorkflowsResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/enrichments": {
            "get": {
                "tags": [
                    "enrichments"
                ],
                "summary": "List enrichment modules",
                "description": "Get a list of all available enrichment modules",
                "operationId": "list_enrichments_enrichments_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnrichmentsListResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/enrichments/llm": {
            "get": {
                "tags": [
                    "enrichments"
                ],
                "summary": "List enabled LLM enrichment modules",
                "description": "Get a list of enabled LLM enrichment modules",
                "operationId": "list_enabled_llm_enrichments_enrichments_llm_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnrichmentsListResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/enrichments/{enrichment_name}": {
            "post": {
                "tags": [
                    "enrichments"
                ],
                "summary": "Run enrichment module",
                "description": "Run a specific enrichment module on a file",
                "operationId": "run_enrichment_enrichments__enrichment_name__post",
                "parameters": [
                    {
                        "name": "enrichment_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the enrichment module to run",
                            "title": "Enrichment Name"
                        },
                        "description": "Name of the enrichment module to run"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnrichmentRequest",
                                "description": "The enrichment request containing the object ID"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnrichmentResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Service Unavailable"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/system/yara/reload": {
            "post": {
                "tags": [
                    "system"
                ],
                "summary": "Reload Yara rules",
                "description": "Trigger a reload of all Yara rules in the backend",
                "operationId": "reload_yara_rules_system_yara_reload_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/YaraReloadResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/system/cleanup": {
            "post": {
                "tags": [
                    "system"
                ],
                "summary": "Trigger database and datalake cleanup",
                "description": "Trigger the housekeeping service to clean up expired files and database entries, and reset the workflow manager state. Optionally specify an expiration date or 'all' to remove all files.",
                "operationId": "trigger_cleanup_system_cleanup_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CleanupRequest",
                                "description": "Optional cleanup parameters"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/system/health": {
            "get": {
                "tags": [
                    "system"
                ],
                "summary": "Health check",
                "description": "Health check endpoint for Docker healthcheck",
                "operationId": "healthcheck_system_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/system/info": {
            "get": {
                "tags": [
                    "system"
                ],
                "summary": "API information",
                "description": "Root endpoint that shows API information",
                "operationId": "root_system_info_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIInfo"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "APIInfo": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "API name"
                    },
                    "version": {
                        "type": "string",
                        "title": "Version",
                        "description": "API version"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "version"
                ],
                "title": "APIInfo",
                "description": "Model representing API information"
            },
            "ActiveWorkflowDetail": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "filename": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Filename"
                    },
                    "object_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Object Id"
                    },
                    "timestamp": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Timestamp"
                    },
                    "runtime_seconds": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Runtime Seconds"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "status"
                ],
                "title": "ActiveWorkflowDetail"
            },
            "Body_upload_file_files_post": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File",
                        "description": "The file to upload"
                    },
                    "metadata": {
                        "type": "string",
                        "title": "Metadata",
                        "description": "JSON string containing file metadata"
                    }
                },
                "type": "object",
                "required": [
                    "file",
                    "metadata"
                ],
                "title": "Body_upload_file_files_post"
            },
            "CleanupRequest": {
                "properties": {
                    "expiration": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expiration"
                    }
                },
                "type": "object",
                "title": "CleanupRequest"
            },
            "EnrichmentRequest": {
                "properties": {
                    "object_id": {
                        "type": "string",
                        "title": "Object Id"
                    }
                },
                "type": "object",
                "required": [
                    "object_id"
                ],
                "title": "EnrichmentRequest"
            },
            "EnrichmentResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "instance_id": {
                        "type": "string",
                        "title": "Instance Id"
                    },
                    "object_id": {
                        "type": "string",
                        "title": "Object Id"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "message",
                    "instance_id",
                    "object_id"
                ],
                "title": "EnrichmentResponse"
            },
            "EnrichmentsListResponse": {
                "properties": {
                    "modules": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Modules"
                    }
                },
                "type": "object",
                "required": [
                    "modules"
                ],
                "title": "EnrichmentsListResponse"
            },
            "ErrorResponse": {
                "properties": {
                    "detail": {
                        "type": "string",
                        "title": "Detail",
                        "description": "Error message details"
                    }
                },
                "type": "object",
                "required": [
                    "detail"
                ],
                "title": "ErrorResponse"
            },
            "FailedWorkflowsResponse": {
                "properties": {
                    "failed_count": {
                        "type": "integer",
                        "title": "Failed Count"
                    },
                    "workflows": {
                        "items": {
                            "$ref": "#/components/schemas/ActiveWorkflowDetail"
                        },
                        "type": "array",
                        "title": "Workflows",
                        "default": []
                    },
                    "timestamp": {
                        "type": "string",
                        "title": "Timestamp"
                    }
                },
                "type": "object",
                "required": [
                    "failed_count",
                    "timestamp"
                ],
                "title": "FailedWorkflowsResponse"
            },
            "FileWithMetadataResponse": {
                "properties": {
                    "object_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Object Id",
                        "description": "Unique identifier for the uploaded file"
                    },
                    "submission_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Submission Id",
                        "description": "Unique identifier for the metadata submission"
                    }
                },
                "type": "object",
                "required": [
                    "object_id",
                    "submission_id"
                ],
                "title": "FileWithMetadataResponse",
                "description": "Response for combined file and metadata uploads"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HealthResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Health status of the service"
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "HealthResponse",
                "description": "Model representing health check response"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "WorkflowMetrics": {
                "properties": {
                    "completed_count": {
                        "type": "integer",
                        "title": "Completed Count"
                    },
                    "failed_count": {
                        "type": "integer",
                        "title": "Failed Count"
                    },
                    "total_processed": {
                        "type": "integer",
                        "title": "Total Processed"
                    },
                    "success_rate": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Success Rate"
                    },
                    "processing_times": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/WorkflowProcessingStats"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "completed_count",
                    "failed_count",
                    "total_processed"
                ],
                "title": "WorkflowMetrics"
            },
            "WorkflowProcessingStats": {
                "properties": {
                    "avg_seconds": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avg Seconds"
                    },
                    "min_seconds": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Min Seconds"
                    },
                    "max_seconds": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Seconds"
                    },
                    "p50_seconds": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "P50 Seconds"
                    },
                    "p90_seconds": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "P90 Seconds"
                    },
                    "p95_seconds": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "P95 Seconds"
                    },
                    "p99_seconds": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "P99 Seconds"
                    },
                    "samples_count": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Samples Count"
                    }
                },
                "type": "object",
                "title": "WorkflowProcessingStats"
            },
            "WorkflowStatusResponse": {
                "properties": {
                    "queued_files": {
                        "type": "integer",
                        "title": "Queued Files"
                    },
                    "active_workflows": {
                        "type": "integer",
                        "title": "Active Workflows"
                    },
                    "status_counts": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "integer"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Status Counts"
                    },
                    "active_details": {
                        "items": {
                            "$ref": "#/components/schemas/ActiveWorkflowDetail"
                        },
                        "type": "array",
                        "title": "Active Details",
                        "default": []
                    },
                    "metrics": {
                        "$ref": "#/components/schemas/WorkflowMetrics"
                    },
                    "timestamp": {
                        "type": "string",
                        "title": "Timestamp"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error"
                    }
                },
                "type": "object",
                "required": [
                    "queued_files",
                    "active_workflows",
                    "metrics",
                    "timestamp"
                ],
                "title": "WorkflowStatusResponse"
            },
            "YaraReloadResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Status message for Yara rules reload"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "YaraReloadResponse",
                "description": "Model representing Yara rules reload response"
            }
        }
    },
    "tags": [
        {
            "name": "files",
            "description": "File management operations"
        },
        {
            "name": "workflows",
            "description": "Workflow management operations"
        },
        {
            "name": "enrichments",
            "description": "Enrichment management operations"
        },
        {
            "name": "system",
            "description": "System and health check endpoints"
        }
    ]
}